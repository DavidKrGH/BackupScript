#!/bin/bash
# BackupScript version 2.0.0
#################################### License ################################
# MIT License Copyright (c) 2023 David Krumm                                #
# All rights reserved.                                                      #
#                                                                           #
# This source code is licensed under the MIT license found in the           #
# LICENSE file in the root directory of this source tree.                   #
#############################################################################

################################# Parameters ################################

logging_options="$1"                                                        # Settings for the logging of rclone
options="$2"                                                                # Additional rclone options

######################### Docker Volume Propagation #########################

source="$REPOSITORY"

if [[ $source == *":"* ]]; then
    source_prop=":$(echo "$source" | cut -d ":" -f 2)"
    source=$(echo "$source" | cut -d ":" -f 1)
else
    source_prop=""
fi

################################# Rclone ####################################

$NOTIFIER
$NOTIFIER --message "Starting 'Rclone' job"
$NOTIFIER --message "Source '$source'"
$NOTIFIER --message "Remote '$REMOTE'"


################################### Backup

cmd="docker run --rm --name $JOB_NAME-RcloneBackup \
    --volume $HOME_PATH/Config/RcloneConfig:/config/rclone \
    --volume $(dirname "$RCLONE_FILTER"):/filterfile \
    --volume $HOME_PATH/LogFiles/${JOB_NAME}:/logfiles \
    --volume $source:/source$source_prop \
    --user $(id -u):$(id -g) \
    rclone/rclone sync /source $REMOTE \
    --log-file /logfiles/${JOB_NAME}_$(date +'%Y-%m').log \
    --filter-from /filterfile/$(basename "$RCLONE_FILTER") \
    $options"

# progress message
$NOTIFIER
$NOTIFIER --message "Rclone in progress ... "
$NOTIFIER --timestamps "false"
#$NOTIFIER --message "$cmd" --timestamps "false"

eval $cmd
exit_code=$?

################################# Evaluation ################################

if [[ "$exit_code" == 0 ]]; then
    $NOTIFIER --timestamps "false"
    $NOTIFIER --message "Completed 'Rclone' job to '$REMOTE' successfully"
    exit 0
else
    $NOTIFIER --timestamps "false"
    $NOTIFIER --channel "important" --type "warning" --message "ERROR $JOB_NAME: Rclone to '$REMOTE' failed with exit_code=$exit_code"
    $NOTIFIER --timestamps "false"
    exit 1
fi